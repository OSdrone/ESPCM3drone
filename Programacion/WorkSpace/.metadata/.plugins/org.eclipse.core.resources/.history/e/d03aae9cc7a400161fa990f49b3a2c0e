/*
 * TASK_CONTROL.c
 *
 *  Created on: 1 de nov. de 2016
 *      Author: Ruben
 */

#include "TASK_CONTROL.h"

void CONTROL_TASK_FCN(void const * argument){
	//Accion = (Kp + Ki/(1-z^-1))Error + Kd(1-z^-1)Pos
	// o
	//Accion = (Kp + Ki/(1-z^-1))Error + Kd(Vel)

	//TODO Constantes desde memoria FLASH para poder ser ajustada sin reflashear
	q15_t Kp[4] = {2200, 2, 2, 4}; //Ajustar
	q15_t Kd[4] = {2, 2, 2, 4}; //Ajustar
	q15_t Ki[4] = {2, 2, 2, 4}; //Ajustar

	//q15_t Accion[4] = { 0, 0, 0, 0};
	uint16_t AccionMotor[4] = { 0, 0, 0, 0};

	q15_t Referencia[4] = { 0, 0, 0, 0};
	q15_t Posicion[4][3] = { 0, 0, 0, 0};
	q15_t Error[4][2];
	while(1){
		xSemaphoreTake(CONTROL_SMPHRHandle, portMAX_DELAY);

		/* Leer Ref */
		Posicion[0][2] = Posicion[0][1];
		Posicion[0][1] = Posicion[0][0];
		Posicion[1][2] = Posicion[1][1];
		Posicion[1][1] = Posicion[1][0];
		Posicion[2][2] = Posicion[2][1];
		Posicion[2][1] = Posicion[2][0];
		Posicion[3][2] = Posicion[3][1];
		Posicion[3][1] = Posicion[3][0];

		//TODO Leer posicion
		LeerRollPitchYaw(Posicion[0][0], Posicion[1][0], Posicion[2][0]);

				//TODO Leer Altura

	}
}

void CONTROL_TIMER_FCN(void const * argument){
	xSemaphoreGive(CONTROL_SMPHRHandle);
}
